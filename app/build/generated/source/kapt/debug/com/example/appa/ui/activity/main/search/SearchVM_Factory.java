// Generated by Dagger (https://dagger.dev).
package com.example.appa.ui.activity.main.search;

import com.example.appa.data.repository.favorite.FavoriteRepo;
import com.example.appa.data.repository.recent.RecentRepo;
import com.example.appa.data.repository.search.SearchRepo;
import com.example.appa.data.repository.server.MusicServerRepo;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class SearchVM_Factory implements Factory<SearchVM> {
  private final Provider<MusicServerRepo> musicServerRepoProvider;

  private final Provider<SearchRepo> searchRepoProvider;

  private final Provider<RecentRepo> recentRepoProvider;

  private final Provider<FavoriteRepo> favoriteRepoProvider;

  public SearchVM_Factory(Provider<MusicServerRepo> musicServerRepoProvider,
      Provider<SearchRepo> searchRepoProvider, Provider<RecentRepo> recentRepoProvider,
      Provider<FavoriteRepo> favoriteRepoProvider) {
    this.musicServerRepoProvider = musicServerRepoProvider;
    this.searchRepoProvider = searchRepoProvider;
    this.recentRepoProvider = recentRepoProvider;
    this.favoriteRepoProvider = favoriteRepoProvider;
  }

  @Override
  public SearchVM get() {
    return newInstance(musicServerRepoProvider.get(), searchRepoProvider.get(), recentRepoProvider.get(), favoriteRepoProvider.get());
  }

  public static SearchVM_Factory create(Provider<MusicServerRepo> musicServerRepoProvider,
      Provider<SearchRepo> searchRepoProvider, Provider<RecentRepo> recentRepoProvider,
      Provider<FavoriteRepo> favoriteRepoProvider) {
    return new SearchVM_Factory(musicServerRepoProvider, searchRepoProvider, recentRepoProvider, favoriteRepoProvider);
  }

  public static SearchVM newInstance(MusicServerRepo musicServerRepo, SearchRepo searchRepo,
      RecentRepo recentRepo, FavoriteRepo favoriteRepo) {
    return new SearchVM(musicServerRepo, searchRepo, recentRepo, favoriteRepo);
  }
}
