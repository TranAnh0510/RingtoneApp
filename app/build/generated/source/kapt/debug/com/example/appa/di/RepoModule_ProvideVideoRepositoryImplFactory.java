// Generated by Dagger (https://dagger.dev).
package com.example.appa.di;

import com.example.appa.data.repository.video.VideoDataSource;
import com.example.appa.data.repository.video.VideoRepo;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class RepoModule_ProvideVideoRepositoryImplFactory implements Factory<VideoRepo> {
  private final RepoModule module;

  private final Provider<VideoDataSource> videoDataSourceProvider;

  public RepoModule_ProvideVideoRepositoryImplFactory(RepoModule module,
      Provider<VideoDataSource> videoDataSourceProvider) {
    this.module = module;
    this.videoDataSourceProvider = videoDataSourceProvider;
  }

  @Override
  public VideoRepo get() {
    return provideVideoRepositoryImpl(module, videoDataSourceProvider.get());
  }

  public static RepoModule_ProvideVideoRepositoryImplFactory create(RepoModule module,
      Provider<VideoDataSource> videoDataSourceProvider) {
    return new RepoModule_ProvideVideoRepositoryImplFactory(module, videoDataSourceProvider);
  }

  public static VideoRepo provideVideoRepositoryImpl(RepoModule instance,
      VideoDataSource videoDataSource) {
    return Preconditions.checkNotNullFromProvides(instance.provideVideoRepositoryImpl(videoDataSource));
  }
}
