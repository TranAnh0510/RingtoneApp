// Generated by Dagger (https://dagger.dev).
package com.example.appa.di;

import android.app.Application;
import com.example.appa.data.repository.audio.AudioDataSource;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class RepoModule_ProvideAudioDataSourceFactory implements Factory<AudioDataSource> {
  private final RepoModule module;

  private final Provider<Application> contextProvider;

  public RepoModule_ProvideAudioDataSourceFactory(RepoModule module,
      Provider<Application> contextProvider) {
    this.module = module;
    this.contextProvider = contextProvider;
  }

  @Override
  public AudioDataSource get() {
    return provideAudioDataSource(module, contextProvider.get());
  }

  public static RepoModule_ProvideAudioDataSourceFactory create(RepoModule module,
      Provider<Application> contextProvider) {
    return new RepoModule_ProvideAudioDataSourceFactory(module, contextProvider);
  }

  public static AudioDataSource provideAudioDataSource(RepoModule instance, Application context) {
    return Preconditions.checkNotNullFromProvides(instance.provideAudioDataSource(context));
  }
}
