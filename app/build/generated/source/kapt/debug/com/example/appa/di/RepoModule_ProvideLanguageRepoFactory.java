// Generated by Dagger (https://dagger.dev).
package com.example.appa.di;

import com.example.appa.data.local.room.LanguageDao;
import com.example.appa.data.repository.language.LanguageRepo;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class RepoModule_ProvideLanguageRepoFactory implements Factory<LanguageRepo> {
  private final RepoModule module;

  private final Provider<LanguageDao> languageDaoProvider;

  public RepoModule_ProvideLanguageRepoFactory(RepoModule module,
      Provider<LanguageDao> languageDaoProvider) {
    this.module = module;
    this.languageDaoProvider = languageDaoProvider;
  }

  @Override
  public LanguageRepo get() {
    return provideLanguageRepo(module, languageDaoProvider.get());
  }

  public static RepoModule_ProvideLanguageRepoFactory create(RepoModule module,
      Provider<LanguageDao> languageDaoProvider) {
    return new RepoModule_ProvideLanguageRepoFactory(module, languageDaoProvider);
  }

  public static LanguageRepo provideLanguageRepo(RepoModule instance, LanguageDao languageDao) {
    return Preconditions.checkNotNullFromProvides(instance.provideLanguageRepo(languageDao));
  }
}
